/*
 * Copyright (c) 2015, SICS Swedish ICT.
 * Copyright (c) 2020, Institute of Electronics and Computer Science (EDI)
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the Institute nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE INSTITUTE AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE INSTITUTE OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 */

/**
 * \author Simon Duquennoy <simonduq@sics.se>
 *         Atis Elsts <atis.elsts@edi.lv>
 */

#ifndef PROJECT_CONF_H_
#define PROJECT_CONF_H_

/* Set to enable TSCH security */
#ifndef WITH_SECURITY
#define WITH_SECURITY 0
#endif /* WITH_SECURITY */

/* USB serial takes space, free more space elsewhere */
#define SICSLOWPAN_CONF_FRAG 0
#define UIP_CONF_BUFFER_SIZE 160

/*******************************************************/
/******************* Configure TSCH ********************/
/*******************************************************/

/* Disable the 6TiSCH minimal schedule */
#define TSCH_SCHEDULE_CONF_WITH_6TISCH_MINIMAL 0

/* Size of the application-specific schedule; use harmonic number 2,4,8,..  */
#define APP_SLOTFRAME_SIZE 128
//#define TSCH_SCHEDULE_CONF_DEFAULT_LENGTH 8
//64 default
// #define QUEUEBUF_CONF_NUM 200
#define NBR_TABLE_CONF_MAX_NEIGHBORS 256
#define NETSTACK_MAX_ROUTE_ENTRIES 256

/* Do not start TSCH at init, wait for NETSTACK_MAC.on() */
#define TSCH_CONF_AUTOSTART 0


#if WITH_SECURITY

/* Enable security */
#define LLSEC802154_CONF_ENABLED 0

#endif /* WITH_SECURITY */


// #define TSCH_CONF_DEFAULT_HOPPING_SEQUENCE		TSCH_HOPPING_SEQUENCE_1_1
// #define TSCH_CONF_DEFAULT_RANDOM_SEQUENCE_INDEX_1 	TSCH_RANDOM_SEQUENCE_INDEX_1_1
// #define TSCH_CONF_DEFAULT_RANDOM_SEQUENCE_INDEX_2 	TSCH_RANDOM_SEQUENCE_INDEX_1_2
// #define TSCH_CONF_DEFAULT_POINTER_SEQUENCE 		TSCH_POINTER_SEQUENCE_1

// #define TSCH_CONF_DEFAULT_HOPPING_SEQUENCE		TSCH_HOPPING_SEQUENCE_2_2
// #define TSCH_CONF_DEFAULT_RANDOM_SEQUENCE_INDEX_1 	TSCH_RANDOM_SEQUENCE_INDEX_2_1
// #define TSCH_CONF_DEFAULT_RANDOM_SEQUENCE_INDEX_2 	TSCH_RANDOM_SEQUENCE_INDEX_2_2
// #define TSCH_CONF_DEFAULT_POINTER_SEQUENCE 		TSCH_POINTER_SEQUENCE_2

// #define TSCH_CONF_DEFAULT_HOPPING_SEQUENCE		TSCH_HOPPING_SEQUENCE_3_3
// #define TSCH_CONF_DEFAULT_RANDOM_SEQUENCE_INDEX_1 	TSCH_RANDOM_SEQUENCE_INDEX_3_1
// #define TSCH_CONF_DEFAULT_RANDOM_SEQUENCE_INDEX_2 	TSCH_RANDOM_SEQUENCE_INDEX_3_2
// #define TSCH_CONF_DEFAULT_POINTER_SEQUENCE 		TSCH_POINTER_SEQUENCE_3

// #define TSCH_CONF_DEFAULT_HOPPING_SEQUENCE		TSCH_HOPPING_SEQUENCE_4_4
// #define TSCH_CONF_DEFAULT_RANDOM_SEQUENCE_INDEX_1 	TSCH_RANDOM_SEQUENCE_INDEX_4_1
// #define TSCH_CONF_DEFAULT_RANDOM_SEQUENCE_INDEX_2 	TSCH_RANDOM_SEQUENCE_INDEX_4_2
// #define TSCH_CONF_DEFAULT_POINTER_SEQUENCE 		TSCH_POINTER_SEQUENCE_4

// #define TSCH_CONF_DEFAULT_HOPPING_SEQUENCE		TSCH_HOPPING_SEQUENCE_5_5
// #define TSCH_CONF_DEFAULT_RANDOM_SEQUENCE_INDEX_1 	TSCH_RANDOM_SEQUENCE_INDEX_5_1
// #define TSCH_CONF_DEFAULT_RANDOM_SEQUENCE_INDEX_2 	TSCH_RANDOM_SEQUENCE_INDEX_5_2
// #define TSCH_CONF_DEFAULT_POINTER_SEQUENCE 		TSCH_POINTER_SEQUENCE_5

// #define TSCH_CONF_DEFAULT_HOPPING_SEQUENCE		TSCH_HOPPING_SEQUENCE_6_6
// #define TSCH_CONF_DEFAULT_RANDOM_SEQUENCE_INDEX_1 	TSCH_RANDOM_SEQUENCE_INDEX_6_1
// #define TSCH_CONF_DEFAULT_RANDOM_SEQUENCE_INDEX_2 	TSCH_RANDOM_SEQUENCE_INDEX_6_2
// #define TSCH_CONF_DEFAULT_POINTER_SEQUENCE 		TSCH_POINTER_SEQUENCE_6

// #define TSCH_CONF_DEFAULT_HOPPING_SEQUENCE		TSCH_HOPPING_SEQUENCE_7_7
// #define TSCH_CONF_DEFAULT_RANDOM_SEQUENCE_INDEX_1 	TSCH_RANDOM_SEQUENCE_INDEX_7_1
// #define TSCH_CONF_DEFAULT_RANDOM_SEQUENCE_INDEX_2 	TSCH_RANDOM_SEQUENCE_INDEX_7_2
// #define TSCH_CONF_DEFAULT_POINTER_SEQUENCE 		TSCH_POINTER_SEQUENCE_7

// #define TSCH_CONF_DEFAULT_HOPPING_SEQUENCE		TSCH_HOPPING_SEQUENCE_8_8
// #define TSCH_CONF_DEFAULT_RANDOM_SEQUENCE_INDEX_1 	TSCH_RANDOM_SEQUENCE_INDEX_8_1
// #define TSCH_CONF_DEFAULT_RANDOM_SEQUENCE_INDEX_2 	TSCH_RANDOM_SEQUENCE_INDEX_8_2
// #define TSCH_CONF_DEFAULT_POINTER_SEQUENCE 		TSCH_POINTER_SEQUENCE_8

// #define TSCH_CONF_DEFAULT_HOPPING_SEQUENCE		TSCH_HOPPING_SEQUENCE_9_9
// #define TSCH_CONF_DEFAULT_RANDOM_SEQUENCE_INDEX_1 	TSCH_RANDOM_SEQUENCE_INDEX_9_1
// #define TSCH_CONF_DEFAULT_RANDOM_SEQUENCE_INDEX_2 	TSCH_RANDOM_SEQUENCE_INDEX_9_2
// #define TSCH_CONF_DEFAULT_POINTER_SEQUENCE 		TSCH_POINTER_SEQUENCE_9

// #define TSCH_CONF_DEFAULT_HOPPING_SEQUENCE		TSCH_HOPPING_SEQUENCE_10_10
// #define TSCH_CONF_DEFAULT_RANDOM_SEQUENCE_INDEX_1 	TSCH_RANDOM_SEQUENCE_INDEX_10_1
// #define TSCH_CONF_DEFAULT_RANDOM_SEQUENCE_INDEX_2 	TSCH_RANDOM_SEQUENCE_INDEX_10_2
// #define TSCH_CONF_DEFAULT_POINTER_SEQUENCE 		TSCH_POINTER_SEQUENCE_10

// #define TSCH_CONF_DEFAULT_HOPPING_SEQUENCE		TSCH_HOPPING_SEQUENCE_11_11
// #define TSCH_CONF_DEFAULT_RANDOM_SEQUENCE_INDEX_1 	TSCH_RANDOM_SEQUENCE_INDEX_11_1
// #define TSCH_CONF_DEFAULT_RANDOM_SEQUENCE_INDEX_2 	TSCH_RANDOM_SEQUENCE_INDEX_11_2
// #define TSCH_CONF_DEFAULT_POINTER_SEQUENCE 		TSCH_POINTER_SEQUENCE_11

// #define TSCH_CONF_DEFAULT_HOPPING_SEQUENCE		TSCH_HOPPING_SEQUENCE_12_12
// #define TSCH_CONF_DEFAULT_RANDOM_SEQUENCE_INDEX_1 	TSCH_RANDOM_SEQUENCE_INDEX_12_1
// #define TSCH_CONF_DEFAULT_RANDOM_SEQUENCE_INDEX_2 	TSCH_RANDOM_SEQUENCE_INDEX_12_2
// #define TSCH_CONF_DEFAULT_POINTER_SEQUENCE 		TSCH_POINTER_SEQUENCE_12

// #define TSCH_CONF_DEFAULT_HOPPING_SEQUENCE		TSCH_HOPPING_SEQUENCE_13_13
// #define TSCH_CONF_DEFAULT_RANDOM_SEQUENCE_INDEX_1 	TSCH_RANDOM_SEQUENCE_INDEX_13_1
// #define TSCH_CONF_DEFAULT_RANDOM_SEQUENCE_INDEX_2 	TSCH_RANDOM_SEQUENCE_INDEX_13_2
// #define TSCH_CONF_DEFAULT_POINTER_SEQUENCE 		TSCH_POINTER_SEQUENCE_13

// #define TSCH_CONF_DEFAULT_HOPPING_SEQUENCE		TSCH_HOPPING_SEQUENCE_14_14
// #define TSCH_CONF_DEFAULT_RANDOM_SEQUENCE_INDEX_1 	TSCH_RANDOM_SEQUENCE_INDEX_14_1
// #define TSCH_CONF_DEFAULT_RANDOM_SEQUENCE_INDEX_2 	TSCH_RANDOM_SEQUENCE_INDEX_14_2
// #define TSCH_CONF_DEFAULT_POINTER_SEQUENCE 		TSCH_POINTER_SEQUENCE_14

// #define TSCH_CONF_DEFAULT_HOPPING_SEQUENCE		TSCH_HOPPING_SEQUENCE_15_15
// #define TSCH_CONF_DEFAULT_RANDOM_SEQUENCE_INDEX_1 	TSCH_RANDOM_SEQUENCE_INDEX_15_1
// #define TSCH_CONF_DEFAULT_RANDOM_SEQUENCE_INDEX_2 	TSCH_RANDOM_SEQUENCE_INDEX_15_2
// #define TSCH_CONF_DEFAULT_POINTER_SEQUENCE 		TSCH_POINTER_SEQUENCE_15

#define TSCH_CONF_DEFAULT_HOPPING_SEQUENCE		TSCH_HOPPING_SEQUENCE_16_16
// #define TSCH_CONF_DEFAULT_RANDOM_SEQUENCE_INDEX_1 	TSCH_RANDOM_SEQUENCE_INDEX_16_1
// #define TSCH_CONF_DEFAULT_RANDOM_SEQUENCE_INDEX_2 	TSCH_RANDOM_SEQUENCE_INDEX_16_2
// #define TSCH_CONF_DEFAULT_POINTER_SEQUENCE 		TSCH_POINTER_SEQUENCE_16

// #define TSCH_CONF_ALTERNATION_SEQUENCE 	TSCH_ALTERNATION_SEQUENCE
#define TSCH_LOG_CONF_PER_SLOT                     1

#endif /* PROJECT_CONF_H_ */
